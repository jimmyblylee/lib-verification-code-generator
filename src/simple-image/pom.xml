<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.lee.tools</groupId>
    <artifactId>vc-simple-image</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    <name>Simple Image Verification Code</name>
    <description>Implementation of Simple Image Verification Code</description>
    
    <properties>
        <junit.version>4.11</junit.version>
        <!-- plugins versions and settings -->
        <maven-source-plugin.version>2.4</maven-source-plugin.version>
        <maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-compiler-plugin.source>1.7</maven-compiler-plugin.source>
        <maven-compiler-plugin.target>1.7</maven-compiler-plugin.target>
        <maven-assembly-plugin.version>2.5.5</maven-assembly-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-surefire-plugin.skip>false</maven-surefire-plugin.skip>
        
        <encoding>UTF-8</encoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>

        <!-- plugins -->
        <plugins>
            <!-- The Source Plugin creates a jar archive of the source 
                files of the current project. The jar file is, by default, created in the 
                project's target directory. ref: http://maven.apache.org/plugins/maven-source-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- The Javadoc Plugin uses the Javadoc tool to generate 
                javadocs for the specified project. ref: http://maven.apache.org/plugins/maven-javadoc-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <quiet>true</quiet>
                            <charset>${encoding}</charset>
                            <encoding>${encoding}</encoding>
                            <docencoding>${encoding}</docencoding>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- The Resources Plugin handles the copying of project 
                resources to the output directory. ref: http://maven.apache.org/plugins/maven-resources-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <configuration>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
            <!-- The Compiler Plugin is used to compile the sources of 
                your project. ref: http://maven.apache.org/plugins/maven-compiler-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven-compiler-plugin.source}</source>
                    <target>${maven-compiler-plugin.target}</target>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
            <!-- The Surefire Plugin is used during the test phase of 
                the build lifecycle to execute the unit tests of an application. ref: http://maven.apache.org/surefire/maven-surefire-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>-XX:-UseSplitVerifier</argLine>
                    <skip>${maven-surefire-plugin.skip}</skip>
                </configuration>
            </plugin>
            <!-- The Surefire Plugin is used during the test phase of 
                the build lifecycle to execute the unit tests of an application. ref: http://maven.apache.org/surefire/maven-surefire-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipSurefireReport>${maven-surefire-plugin.skip}</skipSurefireReport>
                </configuration>
            </plugin>
            <!--
                The Assembly Plugin for Maven is primarily intended to allow users to 
                aggregate the project output along with its dependencies, modules, site documentation, 
                and other files into a single distributable archive.
                ref: http://maven.apache.org/plugins/maven-assembly-plugin/
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/package.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                This plugin provides the capability to build jars.
                ref: http://maven.apache.org/plugins/maven-jar-plugin/
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <mainClass>com.lee.vcg.impl.GenerateSimpleImages</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>